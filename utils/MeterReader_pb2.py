# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: MeterReader.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='MeterReader.proto',
  package='MeterReader',
  serialized_pb=_b('\n\x11MeterReader.proto\x12\x0bMeterReader\"\xc9\x01\n\x07Message\x12,\n\x06update\x18\x01 \x01(\x0b\x32\x1a.MeterReader.CounterUpdateH\x00\x12\x32\n\tcalibrate\x18\x02 \x01(\x0b\x32\x1d.MeterReader.StartCalibrationH\x00\x12)\n\x08settings\x18\x03 \x01(\x0b\x32\x15.MeterReader.SettingsH\x00\x12&\n\x03log\x18\x04 \x01(\x0b\x32\x17.MeterReader.LogMessageH\x00\x42\t\n\x07message\"c\n\nLogMessage\x12*\n\x04type\x18\x01 \x02(\x0e\x32\x1c.MeterReader.LogMessage.Type\x12\x0c\n\x04text\x18\x02 \x02(\t\"\x1b\n\x04Type\x12\t\n\x05\x45RROR\x10\x00\x12\x08\n\x04NOTE\x10\x01\"O\n\rCounterUpdate\x12\x0f\n\x07meterId\x18\x01 \x02(\r\x12\x10\n\x08seriesId\x18\x02 \x02(\r\x12\x1b\n\x13\x63urrentCounterValue\x18\x03 \x02(\x04\"\x12\n\x10StartCalibration\"\x87\x02\n\x08Settings\x12\x0f\n\x07meterId\x18\x01 \x02(\r\x12\x10\n\x08seriesId\x18\x02 \x02(\r\x12H\n\x14\x63ommunicationChannel\x18\x04 \x02(\x0e\x32*.MeterReader.Settings.CommunicationChannel\x12\x11\n\tthreshold\x18\x05 \x02(\r\x12\x12\n\nhysteresis\x18\x06 \x02(\r\x12\x19\n\x11risingEdgeAmounts\x18\x08 \x03(\r\x12\x1a\n\x12\x66\x61llingEdgeAmounts\x18\t \x03(\r\"0\n\x14\x43ommunicationChannel\x12\n\n\x06SERIAL\x10\x00\x12\x0c\n\x08WIRELESS\x10\x01')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_LOGMESSAGE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='MeterReader.LogMessage.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOTE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=310,
  serialized_end=337,
)
_sym_db.RegisterEnumDescriptor(_LOGMESSAGE_TYPE)

_SETTINGS_COMMUNICATIONCHANNEL = _descriptor.EnumDescriptor(
  name='CommunicationChannel',
  full_name='MeterReader.Settings.CommunicationChannel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SERIAL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WIRELESS', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=656,
  serialized_end=704,
)
_sym_db.RegisterEnumDescriptor(_SETTINGS_COMMUNICATIONCHANNEL)


_MESSAGE = _descriptor.Descriptor(
  name='Message',
  full_name='MeterReader.Message',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='update', full_name='MeterReader.Message.update', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='calibrate', full_name='MeterReader.Message.calibrate', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='settings', full_name='MeterReader.Message.settings', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log', full_name='MeterReader.Message.log', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='message', full_name='MeterReader.Message.message',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=35,
  serialized_end=236,
)


_LOGMESSAGE = _descriptor.Descriptor(
  name='LogMessage',
  full_name='MeterReader.LogMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='MeterReader.LogMessage.type', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='text', full_name='MeterReader.LogMessage.text', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LOGMESSAGE_TYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=238,
  serialized_end=337,
)


_COUNTERUPDATE = _descriptor.Descriptor(
  name='CounterUpdate',
  full_name='MeterReader.CounterUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='meterId', full_name='MeterReader.CounterUpdate.meterId', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='seriesId', full_name='MeterReader.CounterUpdate.seriesId', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='currentCounterValue', full_name='MeterReader.CounterUpdate.currentCounterValue', index=2,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=339,
  serialized_end=418,
)


_STARTCALIBRATION = _descriptor.Descriptor(
  name='StartCalibration',
  full_name='MeterReader.StartCalibration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=420,
  serialized_end=438,
)


_SETTINGS = _descriptor.Descriptor(
  name='Settings',
  full_name='MeterReader.Settings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='meterId', full_name='MeterReader.Settings.meterId', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='seriesId', full_name='MeterReader.Settings.seriesId', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='communicationChannel', full_name='MeterReader.Settings.communicationChannel', index=2,
      number=4, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='threshold', full_name='MeterReader.Settings.threshold', index=3,
      number=5, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hysteresis', full_name='MeterReader.Settings.hysteresis', index=4,
      number=6, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='risingEdgeAmounts', full_name='MeterReader.Settings.risingEdgeAmounts', index=5,
      number=8, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fallingEdgeAmounts', full_name='MeterReader.Settings.fallingEdgeAmounts', index=6,
      number=9, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SETTINGS_COMMUNICATIONCHANNEL,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=441,
  serialized_end=704,
)

_MESSAGE.fields_by_name['update'].message_type = _COUNTERUPDATE
_MESSAGE.fields_by_name['calibrate'].message_type = _STARTCALIBRATION
_MESSAGE.fields_by_name['settings'].message_type = _SETTINGS
_MESSAGE.fields_by_name['log'].message_type = _LOGMESSAGE
_MESSAGE.oneofs_by_name['message'].fields.append(
  _MESSAGE.fields_by_name['update'])
_MESSAGE.fields_by_name['update'].containing_oneof = _MESSAGE.oneofs_by_name['message']
_MESSAGE.oneofs_by_name['message'].fields.append(
  _MESSAGE.fields_by_name['calibrate'])
_MESSAGE.fields_by_name['calibrate'].containing_oneof = _MESSAGE.oneofs_by_name['message']
_MESSAGE.oneofs_by_name['message'].fields.append(
  _MESSAGE.fields_by_name['settings'])
_MESSAGE.fields_by_name['settings'].containing_oneof = _MESSAGE.oneofs_by_name['message']
_MESSAGE.oneofs_by_name['message'].fields.append(
  _MESSAGE.fields_by_name['log'])
_MESSAGE.fields_by_name['log'].containing_oneof = _MESSAGE.oneofs_by_name['message']
_LOGMESSAGE.fields_by_name['type'].enum_type = _LOGMESSAGE_TYPE
_LOGMESSAGE_TYPE.containing_type = _LOGMESSAGE
_SETTINGS.fields_by_name['communicationChannel'].enum_type = _SETTINGS_COMMUNICATIONCHANNEL
_SETTINGS_COMMUNICATIONCHANNEL.containing_type = _SETTINGS
DESCRIPTOR.message_types_by_name['Message'] = _MESSAGE
DESCRIPTOR.message_types_by_name['LogMessage'] = _LOGMESSAGE
DESCRIPTOR.message_types_by_name['CounterUpdate'] = _COUNTERUPDATE
DESCRIPTOR.message_types_by_name['StartCalibration'] = _STARTCALIBRATION
DESCRIPTOR.message_types_by_name['Settings'] = _SETTINGS

Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), dict(
  DESCRIPTOR = _MESSAGE,
  __module__ = 'MeterReader_pb2'
  # @@protoc_insertion_point(class_scope:MeterReader.Message)
  ))
_sym_db.RegisterMessage(Message)

LogMessage = _reflection.GeneratedProtocolMessageType('LogMessage', (_message.Message,), dict(
  DESCRIPTOR = _LOGMESSAGE,
  __module__ = 'MeterReader_pb2'
  # @@protoc_insertion_point(class_scope:MeterReader.LogMessage)
  ))
_sym_db.RegisterMessage(LogMessage)

CounterUpdate = _reflection.GeneratedProtocolMessageType('CounterUpdate', (_message.Message,), dict(
  DESCRIPTOR = _COUNTERUPDATE,
  __module__ = 'MeterReader_pb2'
  # @@protoc_insertion_point(class_scope:MeterReader.CounterUpdate)
  ))
_sym_db.RegisterMessage(CounterUpdate)

StartCalibration = _reflection.GeneratedProtocolMessageType('StartCalibration', (_message.Message,), dict(
  DESCRIPTOR = _STARTCALIBRATION,
  __module__ = 'MeterReader_pb2'
  # @@protoc_insertion_point(class_scope:MeterReader.StartCalibration)
  ))
_sym_db.RegisterMessage(StartCalibration)

Settings = _reflection.GeneratedProtocolMessageType('Settings', (_message.Message,), dict(
  DESCRIPTOR = _SETTINGS,
  __module__ = 'MeterReader_pb2'
  # @@protoc_insertion_point(class_scope:MeterReader.Settings)
  ))
_sym_db.RegisterMessage(Settings)


# @@protoc_insertion_point(module_scope)
