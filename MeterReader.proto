package MeterReader;

message Message {
  oneof message {
    CounterUpdate update = 1;
    StartCalibration calibrate = 2;
    Settings settings = 3;
    LogMessage log = 4;
  }
}

message LogMessage {
  enum Type { 
    ERROR=0;
    NOTE=1;
  };

  required Type type = 1;
  required string text = 2;
}

message CounterUpdate {
  required uint32 meterId = 1;
	required uint32 seriesId = 2;
	required uint64 currentCounterValue = 3;
}

message StartCalibration {
}

// Example settings structure
message Settings {
  // The variables of our settings
  required uint32 meterId = 1;
  required uint32 seriesId = 2;

  // Modes
  enum CommunicationChannel { 
    SERIAL=0;
    WIRELESS=1; 
  };
  required CommunicationChannel communicationChannel = 4;

  // Analog sampling: comparator settings
  required uint32 threshold = 5;
  required uint32 hysteresis = 6;

  // Digital sampling: edge amounts
  repeated uint32 risingEdgeAmounts = 8;
  repeated uint32 fallingEdgeAmounts = 9;
};