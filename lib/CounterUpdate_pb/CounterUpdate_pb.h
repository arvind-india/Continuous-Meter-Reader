/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.4-dev at Sat Aug 22 21:37:00 2015. */

#ifndef PB_COUNTERUPDATE_PB_H_INCLUDED
#define PB_COUNTERUPDATE_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _MeterReader_CounterUpdate {
    int32_t meterId;
    uint32_t seriesId;
    uint64_t currentCounterValue;
} MeterReader_CounterUpdate;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MeterReader_CounterUpdate_init_default   {0, 0, 0}
#define MeterReader_CounterUpdate_init_zero      {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define MeterReader_CounterUpdate_meterId_tag    1
#define MeterReader_CounterUpdate_seriesId_tag   2
#define MeterReader_CounterUpdate_currentCounterValue_tag 3

/* Struct field encoding specification for nanopb */
extern const pb_field_t MeterReader_CounterUpdate_fields[4];

/* Maximum encoded size of messages (where known) */
#define MeterReader_CounterUpdate_size           28

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define COUNTERUPDATE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
